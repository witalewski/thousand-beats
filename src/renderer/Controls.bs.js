// Generated by ReScript, PLEASE EDIT WITH CARE

import * as CssJs from "bs-css-emotion/src/CssJs.bs.js";
import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as Caml_option from "rescript/lib/es6/caml_option.js";

var deleteProp = ((newProps, key) => delete newProps[key]);

function getOrEmpty(str) {
  if (str !== undefined) {
    return " " + str;
  } else {
    return "";
  }
}

var styles = CssJs.style([
      CssJs.label("Controls"),
      CssJs.display("flex"),
      CssJs.unsafe("alignItems", "center"),
      CssJs.unsafe("justifyContent", "center"),
      CssJs.flexBasis({
            NAME: "percent",
            VAL: 33
          })
    ]);

function make(props) {
  var className = styles + getOrEmpty(Caml_option.undefined_to_opt(props.className));
  var stylesObject = {
    className: className,
    ref: Caml_option.undefined_to_opt(props.innerRef)
  };
  var newProps = Object.assign({}, props, stylesObject);
  deleteProp(newProps, "innerRef");
  return React.createElement("div", newProps);
}

var Controls = {
  deleteProp: deleteProp,
  getOrEmpty: getOrEmpty,
  styles: styles,
  make: make
};

var buttonStyle = {
  background: "none",
  border: "none",
  color: "#ebbcba",
  width: "26px"
};

function Controls$1(Props) {
  var onToggle = Props.onToggle;
  var resetTimer = Props.resetTimer;
  var labelHtml = Props.labelHtml;
  return React.createElement(make, {
              children: null
            }, React.createElement("button", {
                  style: buttonStyle,
                  onClick: (function (param) {
                      return Curry._1(onToggle, undefined);
                    }),
                  dangerouslySetInnerHTML: {
                    __html: labelHtml
                  }
                }), React.createElement("button", {
                  style: buttonStyle,
                  onClick: (function (param) {
                      return Curry._1(resetTimer, undefined);
                    }),
                  dangerouslySetInnerHTML: {
                    __html: "&#8634;"
                  }
                }));
}

var make$1 = Controls$1;

export {
  Controls ,
  buttonStyle ,
  make$1 as make,
  
}
/* styles Not a pure module */
