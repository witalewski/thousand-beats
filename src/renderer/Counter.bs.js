// Generated by ReScript, PLEASE EDIT WITH CARE

import * as CssJs from "bs-css-emotion/src/CssJs.bs.js";
import * as React from "react";
import * as Js_math from "rescript/lib/es6/js_math.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";

var deleteProp = ((newProps, key) => delete newProps[key]);

function getOrEmpty(str) {
  if (str !== undefined) {
    return " " + str;
  } else {
    return "";
  }
}

var styles = CssJs.style([
      CssJs.label("Counter"),
      CssJs.display("flex"),
      CssJs.unsafe("alignItems", "center"),
      CssJs.unsafe("justifyContent", "center"),
      CssJs.flexBasis({
            NAME: "percent",
            VAL: 33
          })
    ]);

function make(props) {
  var className = styles + getOrEmpty(Caml_option.undefined_to_opt(props.className));
  var stylesObject = {
    className: className,
    ref: Caml_option.undefined_to_opt(props.innerRef)
  };
  var newProps = Object.assign({}, props, stylesObject);
  deleteProp(newProps, "innerRef");
  return React.createElement("span", newProps);
}

var Counter = {
  deleteProp: deleteProp,
  getOrEmpty: getOrEmpty,
  styles: styles,
  make: make
};

function Counter$1(Props) {
  var timeRemainingRatio = Props.timeRemainingRatio;
  var unitsRemaining = Js_math.floor(timeRemainingRatio * 1000);
  return React.createElement(make, {
              children: String(unitsRemaining)
            });
}

var make$1 = Counter$1;

export {
  Counter ,
  make$1 as make,
  
}
/* styles Not a pure module */
